[project]
name = "algorithms"
version = "0.1.0"
description = ""
authors = [{ name = "AndrÃ© Rodrigues", email = "andrelmarques11@gmail.com"}]
readme = "README.md"
requires-python = ">=3.10"

dependencies = [
    "ipykernel>=6.29.5",
    "kaleido==0.2.1",
    "matplotlib>=3.9.2",
    "nbformat>=5.10.4",
    "numpy>=2.1.1",
    "pandas>=2.2.2",
    "plotly>=5.24.1",
]

[tool.uv]
dev-dependencies = [
    "coverage>=7.6.1",
    "ipython>=8.27.0",
    "mypy>=1.11.2",
    "pre-commit>=3.8.0",
    "pytest>=8.3.3",
    "ruff>=0.6.5",
]

[tool.pytest.ini_options]
testpaths = [
    "tests"
]

[tool.ruff]
# Exclude a variety of commonly ignored directories.
exclude = [
    ".venv",
    ".git",
    ".vscode",
    "build",
    "dist",
    ".mypy_cache",
    ".python-version",
    "*.pyi",
    "*.ipynb"
]

# Same as Black.
line-length = 90
indent-width = 4

# Assume Python 3.10
target-version = "py310"

[tool.ruff.lint]
select = ["E4", "E7", "E9", "F"]
ignore = []

fixable = ["ALL"]

[tool.ruff.format]
# Like Black, use double quotes for strings.
quote-style = "double"
# Like Black, indent with spaces, rather than tabs.
indent-style = "space"
# Like Black, respect magic trailing commas.
skip-magic-trailing-comma = false
# Like Black, automatically detect the appropriate line ending.
line-ending = "auto"
# Enable auto-formatting of code examples in docstrings. Markdown,
# reStructuredText code/literal blocks and doctests are all supported.
#
# This is currently disabled by default, but it is planned for this
# to be opt-out in the future.
docstring-code-format = false
# Set the line length limit used when formatting code snippets in
# docstrings.
#
# This only has an effect when the `docstring-code-format` setting is
# enabled.
docstring-code-line-length = "dynamic"

[tool.mypy]
warn_return_any = true
disallow_untyped_defs = true

[build-system]
requires = ["setuptools"]
build-backend = "setuptools.build_meta"